<div>
  <Form submit="upload" change="validate" opts={"phx-target": @myself}>
    <div class="p-5">
      <div class="p-4 mb-0 rounded-md bg-info/10">
        <div class="flex">
          <div class="flex-shrink-0">
            <div iconify="heroicons-solid:information-circle" class="w-5 h-5 text-info" aria-hidden="true" />
          </div>
          <div class="flex-1 ml-3 md:flex md:justify-between">
            <p class="text-sm text-info">{@description}</p>
          </div>
        </div>
      </div>

      <div class="flex mt-5  items-start gap-6">
        <span class="w-12 h-12 shrink-0  rounded-full flex place-content-center items-center bg-info/10">
          <b>1</b>
        </span>
        <div class="flex flex-col gap-1 w-full" phx-update="ignore">
          <h2 class="font-semibold text-sm">{l("Enter a label or description of the emoji")}</h2>
          <input
            name="label"
            type="text"
            placeholder="e.g: animation of a molotov cocktail being thrown"
            class="input input-bordered w-full"
          />
        </div>
      </div>

      <div class="flex mt-5  items-start gap-6">
        <span class="w-12 h-12 shrink-0  rounded-full flex place-content-center items-center bg-info/10">
          <b>2</b>
        </span>
        <div class="flex flex-col gap-1 w-full" phx-update="ignore">
          <h2 class="font-semibold text-sm">{l("Choose a shortcode to enter when inserting this emoji")}</h2>
          <input
            name="shortcode"
            type="text"
            placeholder="e.g: :light_my_fire:"
            class="input input-bordered w-full"
          />
        </div>
      </div>

      <div class="mt-10 flex items-start gap-6">
        <span class="w-12 h-12 shrink-0 rounded-full flex place-content-center items-center bg-info/10">
          <b>3</b>
        </span>
        <div class="flex flex-col gap-1">
          <div class="font-semibold">{l("Upload an emoji image")}</div>
          {!-- <FileInput field="file" class="mt-4 file-input file-input-bordered w-full max-w-md" opts={"accepts": ".csv"} /> --}
          <label for={@uploads.emoji.ref} class="w-full max-w-md">
            <div class="text-sm py-1">{l("Select or drop a file (eg. SVG or PNG) to upload")}</div>
            <Phoenix.Component.live_file_input
              upload={@uploads.emoji}
              class="file-input file-input-bordered"
            />
          </label>
        </div>
      </div>

      <button class="btn mt-6 btn-wide btn-primary">{l("Add custom emoji")}</button>
    </div>
  </Form>

  {#if not is_nil(@existing_emoji)}
    <div class="p-4 border-t border-base-content/10">
      <h2 class="mb-4 text-sm uppercase text-base-content/50 font-bold">{l("Existing custom emoji")}</h2>
      <div class="flex flex-col gap-4">
        {#for {shortcode, %{} = meta} <- @existing_emoji}
          <div class="flex items-center gap-3 p-2 rounded hover:bg-base-200">
            <div class="flex items-center gap-3 min-w-0 flex-1">
              <img
                src={e(meta, :url, nil)}
                class="w-7 h-7 rounded bg-base-300 object-contain"
                alt={e(meta, :label, nil)}
              />
              <code class="font-mono text-base-content font-bold">{shortcode}</code>
              <span class="truncate text-base-content/70">({e(meta, :label, nil)})</span>
              {#if e(meta, :archived, nil)}
                <span class="badge badge-warning badge-outline ml-2">{l("Archived")}</span>
              {/if}
            </div>
            <div class="flex-shrink-0">
              <Bonfire.UI.Common.OpenModalLive
                id={"remove_emoji_" <> shortcode}
                title_text={l("Remove Emoji")}
                no_actions
                open_btn_wrapper_class="btn btn-xs btn-warning"
              >
                <:open_btn>
                  üóëÔ∏è
                </:open_btn>
                <div class="p-2">
                  <p class="mb-2" :if={!e(meta, :archived, nil)}>{l("You can either:")}</p>
                  <ul class="mb-2 text-sm list-disc">
                    <li :if={!e(meta, :archived, nil)}>{l(
                        "Archive this emoji (remove from the emoji picker, but keep the image in storage so it doesn't break in places where it is already in use)."
                      )}</li>
                    <li>{l("Delete it permanently (remove from picker and delete the image from storage).")}</li>
                  </ul>
                  <div class="flex gap-2 justify-end">
                    <button class="btn btn-sm btn-ghost" phx-click="hide_remove_emoji_modal" phx-target={@myself}>{l("Cancel")}</button>
                    <button
                      :if={!e(meta, :archived, nil)}
                      class="btn btn-sm btn-warning"
                      phx-click="archive_emoji"
                      phx-value-id={id(meta)}
                      phx-value-shortcode={shortcode}
                      phx-target={@myself}
                    >{l("Archive")}</button>
                    <button
                      class="btn btn-sm btn-error"
                      phx-click="delete_emoji_permanently"
                      phx-value-id={id(meta)}
                      phx-value-shortcode={shortcode}
                      phx-target={@myself}
                    >{l("Delete permanently")}</button>
                  </div>
                </div>
              </Bonfire.UI.Common.OpenModalLive>
            </div>
          </div>
        {/for}
      </div>
    </div>
  {/if}
</div>